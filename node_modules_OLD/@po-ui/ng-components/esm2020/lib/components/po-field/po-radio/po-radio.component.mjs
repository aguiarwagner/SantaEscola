import { __decorate } from "tslib";
import { ChangeDetectionStrategy, Component, forwardRef, HostListener, Input, ViewChild } from '@angular/core';
import { NG_VALUE_ACCESSOR } from '@angular/forms';
import { InputBoolean } from '../../../decorators';
import { PoFieldModel } from '../po-field.model';
import { PoKeyCodeEnum } from './../../../enums/po-key-code.enum';
import { PoRadioSize } from './po-radio-size.enum';
import * as i0 from "@angular/core";
import * as i1 from "@angular/common";
const _c0 = ["radio"];
const _c1 = ["radioInput"];
function PoRadioComponent_span_5_Template(rf, ctx) { if (rf & 1) {
    i0.ɵɵelementStart(0, "span");
    i0.ɵɵtext(1);
    i0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r2 = i0.ɵɵnextContext();
    i0.ɵɵadvance(1);
    i0.ɵɵtextInterpolate(ctx_r2.label);
} }
export class PoRadioComponent extends PoFieldModel {
    constructor(changeDetector, renderer) {
        super();
        this.changeDetector = changeDetector;
        this.renderer = renderer;
        this.value = false;
        this._size = PoRadioSize.Medium;
        /** Define o status do *radio* */
        this.checked = false;
    }
    /**
     * @optional
     *
     * @description
     *
     * Define o tamanho do *radio*
     * @default `medium`
     */
    set size(value) {
        this._size = Object.values(PoRadioSize).includes(value) ? value : PoRadioSize.Medium;
    }
    get size() {
        return this._size;
    }
    /**
     * Função que atribui foco ao *radio*.
     *
     * Para utilizá-la é necessário capturar a referência do componente no DOM através do `ViewChild`, como por exemplo:
     *
     * ```
     * import { ViewChild } from '@angular/core';
     * import { PoRadioComponent } from '@po-ui/ng-components';
     *
     * ...
     *
     * @ViewChild(PoRadioComponent, { static: true }) radio: PoRadioComponent;
     *
     * focusRadio() {
     * this.radio.focus();
     * }
     * ```
     *
     */
    focus() {
        if (!this.disabled) {
            this.radioInput.nativeElement.focus();
        }
    }
    onBlur() {
        this.onTouched?.();
    }
    onKeyDown(event) {
        if (event.which === PoKeyCodeEnum.space || event.keyCode === PoKeyCodeEnum.space) {
            this.eventClick();
        }
    }
    changeValue(value) {
        if (value) {
            this.value = value;
            this.updateModel(value);
            this.emitChange(this.value);
        }
    }
    eventClick() {
        if (!this.disabled) {
            this.changeValue(!this.value);
            this.changeDetector.detectChanges();
        }
    }
    onWriteValue(value) {
        if (value !== this.value) {
            this.value = !!value;
            this.changeDetector.markForCheck();
        }
    }
    focusOut() {
        this.renderer.removeClass(this.radio.nativeElement, 'po-radio-focus');
    }
    onKeyup() {
        this.renderer.addClass(this.radio.nativeElement, 'po-radio-focus');
    }
    onKeydown() {
        this.renderer.addClass(this.radio.nativeElement, 'po-radio-focus');
    }
}
PoRadioComponent.ɵfac = function PoRadioComponent_Factory(t) { return new (t || PoRadioComponent)(i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(i0.Renderer2)); };
PoRadioComponent.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: PoRadioComponent, selectors: [["po-radio"]], viewQuery: function PoRadioComponent_Query(rf, ctx) { if (rf & 1) {
        i0.ɵɵviewQuery(_c0, 7);
        i0.ɵɵviewQuery(_c1, 7);
    } if (rf & 2) {
        let _t;
        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.radio = _t.first);
        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.radioInput = _t.first);
    } }, hostBindings: function PoRadioComponent_HostBindings(rf, ctx) { if (rf & 1) {
        i0.ɵɵlistener("focusout", function PoRadioComponent_focusout_HostBindingHandler($event) { return ctx.focusOut($event.target); })("keyup", function PoRadioComponent_keyup_HostBindingHandler($event) { return ctx.onKeyup($event.target); })("keydown", function PoRadioComponent_keydown_HostBindingHandler($event) { return ctx.onKeydown($event.target); });
    } }, inputs: { radioValue: ["p-value", "radioValue"], size: ["p-size", "size"], required: ["p-required", "required"], checked: ["p-checked", "checked"] }, features: [i0.ɵɵProvidersFeature([
            {
                provide: NG_VALUE_ACCESSOR,
                useExisting: forwardRef(() => PoRadioComponent),
                multi: true
            }
        ]), i0.ɵɵInheritDefinitionFeature], decls: 6, vars: 7, consts: [[1, "po-radio"], ["radio", ""], [3, "click", "keydown"], ["radioLabel", ""], ["type", "radio", 3, "checked", "disabled", "name", "required", "value"], [4, "ngIf"]], template: function PoRadioComponent_Template(rf, ctx) { if (rf & 1) {
        i0.ɵɵelementStart(0, "div", 0, 1)(2, "label", 2, 3);
        i0.ɵɵlistener("click", function PoRadioComponent_Template_label_click_2_listener() { return ctx.eventClick(); })("keydown", function PoRadioComponent_Template_label_keydown_2_listener($event) { return ctx.onKeyDown($event); });
        i0.ɵɵelement(4, "input", 4);
        i0.ɵɵtemplate(5, PoRadioComponent_span_5_Template, 2, 1, "span", 5);
        i0.ɵɵelementEnd()();
    } if (rf & 2) {
        let tmp_2_0;
        let tmp_4_0;
        i0.ɵɵadvance(4);
        i0.ɵɵproperty("checked", ctx.checked)("disabled", ctx.disabled)("name", (tmp_2_0 = ctx.name) !== null && tmp_2_0 !== undefined ? tmp_2_0 : "po-input-radio")("required", ctx.required)("value", (tmp_4_0 = ctx.radioValue) !== null && tmp_4_0 !== undefined ? tmp_4_0 : "");
        i0.ɵɵattribute("p-size", ctx.size);
        i0.ɵɵadvance(1);
        i0.ɵɵproperty("ngIf", ctx.label);
    } }, dependencies: [i1.NgIf], encapsulation: 2, changeDetection: 0 });
__decorate([
    InputBoolean()
], PoRadioComponent.prototype, "required", void 0);
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && i0.ɵsetClassMetadata(PoRadioComponent, [{
        type: Component,
        args: [{ selector: 'po-radio', changeDetection: ChangeDetectionStrategy.OnPush, providers: [
                    {
                        provide: NG_VALUE_ACCESSOR,
                        useExisting: forwardRef(() => PoRadioComponent),
                        multi: true
                    }
                ], template: "<div #radio class=\"po-radio\">\n  <label #radioLabel (click)=\"eventClick()\" (keydown)=\"onKeyDown($event)\">\n    <input\n      type=\"radio\"\n      [attr.p-size]=\"size\"\n      [checked]=\"checked\"\n      [disabled]=\"disabled\"\n      [name]=\"name ?? 'po-input-radio'\"\n      [required]=\"required\"\n      [value]=\"radioValue ?? ''\"\n    />\n    <span *ngIf=\"label\">{{ label }}</span>\n  </label>\n</div>\n" }]
    }], function () { return [{ type: i0.ChangeDetectorRef }, { type: i0.Renderer2 }]; }, { radio: [{
            type: ViewChild,
            args: ['radio', { static: true }]
        }], radioInput: [{
            type: ViewChild,
            args: ['radioInput', { static: true }]
        }], radioValue: [{
            type: Input,
            args: ['p-value']
        }], size: [{
            type: Input,
            args: ['p-size']
        }], required: [{
            type: Input,
            args: ['p-required']
        }], checked: [{
            type: Input,
            args: ['p-checked']
        }], focusOut: [{
            type: HostListener,
            args: ['focusout', ['$event.target']]
        }], onKeyup: [{
            type: HostListener,
            args: ['keyup', ['$event.target']]
        }], onKeydown: [{
            type: HostListener,
            args: ['keydown', ['$event.target']]
        }] }); })();
//# sourceMappingURL=data:application/json;base64,