import { Component, forwardRef, Output, EventEmitter, Input } from '@angular/core';
import { NG_VALUE_ACCESSOR } from '@angular/forms';
import { poLocaleDefault } from '../../../services/po-language/po-language.constant';
import { PoCheckboxGroupComponent } from '../../po-field/po-checkbox-group/po-checkbox-group.component';
import * as i0 from "@angular/core";
import * as i1 from "../../../services/po-language/po-language.service";
import * as i2 from "@angular/common";
import * as i3 from "../../po-button/po-button.component";
import * as i4 from "../../../directives/po-tooltip/po-tooltip.directive";
import * as i5 from "../../po-field/po-checkbox/po-checkbox.component";
function PoTableListManagerComponent_li_0_Template(rf, ctx) { if (rf & 1) {
    const _r4 = i0.ɵɵgetCurrentView();
    i0.ɵɵelementStart(0, "li", 1)(1, "div", 2)(2, "po-checkbox", 3, 4);
    i0.ɵɵlistener("click", function PoTableListManagerComponent_li_0_Template_po_checkbox_click_2_listener() { const restoredCtx = i0.ɵɵrestoreView(_r4); const option_r1 = restoredCtx.$implicit; const ctx_r3 = i0.ɵɵnextContext(); return i0.ɵɵresetView(ctx_r3.checkOption(option_r1)); })("keydown", function PoTableListManagerComponent_li_0_Template_po_checkbox_keydown_2_listener($event) { const restoredCtx = i0.ɵɵrestoreView(_r4); const option_r1 = restoredCtx.$implicit; const ctx_r5 = i0.ɵɵnextContext(); return i0.ɵɵresetView(ctx_r5.onKeyDown($event, option_r1)); });
    i0.ɵɵelementEnd();
    i0.ɵɵelementStart(4, "div", 5)(5, "po-button", 6);
    i0.ɵɵlistener("click", function PoTableListManagerComponent_li_0_Template_po_button_click_5_listener($event) { const restoredCtx = i0.ɵɵrestoreView(_r4); const option_r1 = restoredCtx.$implicit; const ctx_r6 = i0.ɵɵnextContext(); ctx_r6.emitChangePosition(option_r1, "up"); return i0.ɵɵresetView($event.stopPropagation()); });
    i0.ɵɵelementEnd();
    i0.ɵɵelementStart(6, "po-button", 7);
    i0.ɵɵlistener("click", function PoTableListManagerComponent_li_0_Template_po_button_click_6_listener($event) { const restoredCtx = i0.ɵɵrestoreView(_r4); const option_r1 = restoredCtx.$implicit; const ctx_r7 = i0.ɵɵnextContext(); ctx_r7.emitChangePosition(option_r1, "down"); return i0.ɵɵresetView($event.stopPropagation()); });
    i0.ɵɵelementEnd()()()();
} if (rf & 2) {
    const option_r1 = ctx.$implicit;
    const ctx_r0 = i0.ɵɵnextContext();
    i0.ɵɵclassProp("po-checkbox-group-item-disabled", option_r1.disabled || ctx_r0.disabled);
    i0.ɵɵadvance(2);
    i0.ɵɵproperty("p-label", option_r1.label)("p-disabled", option_r1.disabled || ctx_r0.disabled)("p-checkboxValue", ctx_r0.checkedOptions[option_r1.value] === null ? "mixed" : ctx_r0.checkedOptions[option_r1.value])("p-required", ctx_r0.required);
    i0.ɵɵadvance(3);
    i0.ɵɵproperty("p-tooltip", ctx_r0.literals.up)("p-disabled", ctx_r0.verifyArrowDisabled(option_r1, "up"));
    i0.ɵɵadvance(1);
    i0.ɵɵproperty("p-tooltip", ctx_r0.literals.down)("p-disabled", ctx_r0.verifyArrowDisabled(option_r1, "down"));
} }
export const poTableListManagerLiterals = {
    en: {
        up: 'up',
        down: 'down'
    },
    es: {
        up: 'arriba',
        down: 'abajo'
    },
    pt: {
        up: 'acima',
        down: 'abaixo'
    },
    ru: {
        up: 'вверх',
        down: 'вниз'
    }
};
export class PoTableListManagerComponent extends PoCheckboxGroupComponent {
    constructor(languageService, changeDetector) {
        super(changeDetector);
        this.changePosition = new EventEmitter();
        const language = languageService.getShortLanguage();
        this.literals = {
            ...poTableListManagerLiterals[poLocaleDefault],
            ...poTableListManagerLiterals[language]
        };
    }
    emitChangePosition(option, direction) {
        const infoPosition = { option, direction };
        const hasDisabled = this.verifyArrowDisabled(option, direction);
        if (!hasDisabled) {
            this.changePosition.emit(infoPosition);
        }
    }
    verifyArrowDisabled(option, direction) {
        const index = this.columnsManager.findIndex(el => el.property === option.value);
        const existsDetail = this.columnsManager.some(function (el) {
            return el.property === 'detail';
        });
        const valueSubtraction = existsDetail ? 2 : 1;
        if (index === 0 && direction === 'up') {
            return true;
        }
        if (index === this.columnsManager.length - valueSubtraction && direction === 'down') {
            return true;
        }
        return false;
    }
}
PoTableListManagerComponent.ɵfac = function PoTableListManagerComponent_Factory(t) { return new (t || PoTableListManagerComponent)(i0.ɵɵdirectiveInject(i1.PoLanguageService), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef)); };
PoTableListManagerComponent.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: PoTableListManagerComponent, selectors: [["po-table-list-manager"]], inputs: { columnsManager: ["p-columns-manager", "columnsManager"] }, outputs: { changePosition: "p-change-position" }, features: [i0.ɵɵProvidersFeature([
            {
                provide: NG_VALUE_ACCESSOR,
                useExisting: forwardRef(() => PoTableListManagerComponent),
                multi: true
            }
        ]), i0.ɵɵInheritDefinitionFeature], decls: 1, vars: 2, consts: [["class", "po-table-list-manager-container", 3, "po-checkbox-group-item-disabled", 4, "ngFor", "ngForOf", "ngForTrackBy"], [1, "po-table-list-manager-container"], [1, "po-table-list-manager-item"], [3, "p-label", "p-disabled", "p-checkboxValue", "p-required", "click", "keydown"], ["checkboxLabel", ""], [1, "po-container-icons-arrows-columns-manager"], ["p-tooltip-position", "left", "p-kind", "tertiary", "p-icon", "po-icon po-icon-arrow-up", 3, "p-tooltip", "p-disabled", "click"], ["p-tooltip-position", "top", "p-kind", "tertiary", "p-icon", "po-icon po-icon-arrow-down", 3, "p-tooltip", "p-disabled", "click"]], template: function PoTableListManagerComponent_Template(rf, ctx) { if (rf & 1) {
        i0.ɵɵtemplate(0, PoTableListManagerComponent_li_0_Template, 7, 10, "li", 0);
    } if (rf & 2) {
        i0.ɵɵproperty("ngForOf", ctx.checkboxGroupOptionsView)("ngForTrackBy", ctx.trackByFn);
    } }, dependencies: [i2.NgForOf, i3.PoButtonComponent, i4.PoTooltipDirective, i5.PoCheckboxComponent], encapsulation: 2 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && i0.ɵsetClassMetadata(PoTableListManagerComponent, [{
        type: Component,
        args: [{ selector: 'po-table-list-manager', providers: [
                    {
                        provide: NG_VALUE_ACCESSOR,
                        useExisting: forwardRef(() => PoTableListManagerComponent),
                        multi: true
                    }
                ], template: "<li\n  class=\"po-table-list-manager-container\"\n  *ngFor=\"let option of checkboxGroupOptionsView; trackBy: trackByFn\"\n  [class.po-checkbox-group-item-disabled]=\"option.disabled || disabled\"\n>\n  <div class=\"po-table-list-manager-item\">\n    <po-checkbox\n      #checkboxLabel\n      [p-label]=\"option.label\"\n      [p-disabled]=\"option.disabled || disabled\"\n      (click)=\"checkOption(option)\"\n      (keydown)=\"onKeyDown($event, option)\"\n      [p-checkboxValue]=\"checkedOptions[option.value] === null ? 'mixed' : checkedOptions[option.value]\"\n      [p-required]=\"required\"\n    >\n    </po-checkbox>\n    <div class=\"po-container-icons-arrows-columns-manager\">\n      <po-button\n        [p-tooltip]=\"literals.up\"\n        p-tooltip-position=\"left\"\n        p-kind=\"tertiary\"\n        p-icon=\"po-icon po-icon-arrow-up\"\n        [p-disabled]=\"verifyArrowDisabled(option, 'up')\"\n        (click)=\"emitChangePosition(option, 'up'); $event.stopPropagation()\"\n      >\n      </po-button>\n\n      <po-button\n        [p-tooltip]=\"literals.down\"\n        p-tooltip-position=\"top\"\n        p-kind=\"tertiary\"\n        p-icon=\"po-icon po-icon-arrow-down\"\n        [p-disabled]=\"verifyArrowDisabled(option, 'down')\"\n        (click)=\"emitChangePosition(option, 'down'); $event.stopPropagation()\"\n      >\n      </po-button>\n    </div>\n  </div>\n</li>\n" }]
    }], function () { return [{ type: i1.PoLanguageService }, { type: i0.ChangeDetectorRef }]; }, { changePosition: [{
            type: Output,
            args: ['p-change-position']
        }], columnsManager: [{
            type: Input,
            args: ['p-columns-manager']
        }] }); })();
//# sourceMappingURL=data:application/json;base64,