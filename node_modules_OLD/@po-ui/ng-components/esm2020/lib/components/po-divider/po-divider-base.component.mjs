import { Input, Directive } from '@angular/core';
import { PoDividerSize } from './po-divider-size.enum';
import * as i0 from "@angular/core";
/**
 * @description
 *
 * Este componente apresenta uma linha demarcadora de blocos e pode conter um *label*. Seu uso é indicado para definição
 * e organização de informações em uma tela e sua característica é semelhante à tag `<hr>`.
 */
export class PoDividerBaseComponent {
    constructor() {
        this._borderWidth = PoDividerSize.small;
    }
    /**
     * @optional
     *
     * @description
     *
     * Define a espessura da linha.
     *
     * Valores válidos:
     * - small
     * - medium
     * - large
     *
     * @default `small`
     */
    set borderWidth(value) {
        this._borderWidth = PoDividerSize[value] ? PoDividerSize[value] : PoDividerSize.small;
        this.getCoordinates();
    }
    get borderWidth() {
        return this._borderWidth;
    }
    ngOnInit() {
        this.getCoordinates();
    }
    getCoordinates() {
        if (this.borderWidth === PoDividerSize.small) {
            this.coordinateX1 = '0.1%';
            this.coordinateX2 = '99.9%';
        }
        else if (this.borderWidth === PoDividerSize.medium) {
            this.coordinateX1 = '0.2%';
            this.coordinateX2 = '99.8%';
        }
        else {
            this.coordinateX1 = '0.3%';
            this.coordinateX2 = '99.7%';
        }
    }
}
PoDividerBaseComponent.ɵfac = function PoDividerBaseComponent_Factory(t) { return new (t || PoDividerBaseComponent)(); };
PoDividerBaseComponent.ɵdir = /*@__PURE__*/ i0.ɵɵdefineDirective({ type: PoDividerBaseComponent, inputs: { label: ["p-label", "label"], borderWidth: ["p-border-width", "borderWidth"] } });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && i0.ɵsetClassMetadata(PoDividerBaseComponent, [{
        type: Directive
    }], null, { label: [{
            type: Input,
            args: ['p-label']
        }], borderWidth: [{
            type: Input,
            args: ['p-border-width']
        }] }); })();
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicG8tZGl2aWRlci1iYXNlLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uL3Byb2plY3RzL3VpL3NyYy9saWIvY29tcG9uZW50cy9wby1kaXZpZGVyL3BvLWRpdmlkZXItYmFzZS5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLEtBQUssRUFBRSxTQUFTLEVBQVUsTUFBTSxlQUFlLENBQUM7QUFDekQsT0FBTyxFQUFFLGFBQWEsRUFBRSxNQUFNLHdCQUF3QixDQUFDOztBQUV2RDs7Ozs7R0FLRztBQUVILE1BQU0sT0FBTyxzQkFBc0I7SUFEbkM7UUFJVSxpQkFBWSxHQUFXLGFBQWEsQ0FBQyxLQUFLLENBQUM7S0E0Q3BEO0lBdkNDOzs7Ozs7Ozs7Ozs7O09BYUc7SUFDSCxJQUE2QixXQUFXLENBQUMsS0FBYTtRQUNwRCxJQUFJLENBQUMsWUFBWSxHQUFHLGFBQWEsQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDLENBQUMsYUFBYSxDQUFDLEtBQUssQ0FBQyxDQUFDLENBQUMsQ0FBQyxhQUFhLENBQUMsS0FBSyxDQUFDO1FBQ3RGLElBQUksQ0FBQyxjQUFjLEVBQUUsQ0FBQztJQUN4QixDQUFDO0lBRUQsSUFBSSxXQUFXO1FBQ2IsT0FBTyxJQUFJLENBQUMsWUFBWSxDQUFDO0lBQzNCLENBQUM7SUFFRCxRQUFRO1FBQ04sSUFBSSxDQUFDLGNBQWMsRUFBRSxDQUFDO0lBQ3hCLENBQUM7SUFFRCxjQUFjO1FBQ1osSUFBSSxJQUFJLENBQUMsV0FBVyxLQUFLLGFBQWEsQ0FBQyxLQUFLLEVBQUU7WUFDNUMsSUFBSSxDQUFDLFlBQVksR0FBRyxNQUFNLENBQUM7WUFDM0IsSUFBSSxDQUFDLFlBQVksR0FBRyxPQUFPLENBQUM7U0FDN0I7YUFBTSxJQUFJLElBQUksQ0FBQyxXQUFXLEtBQUssYUFBYSxDQUFDLE1BQU0sRUFBRTtZQUNwRCxJQUFJLENBQUMsWUFBWSxHQUFHLE1BQU0sQ0FBQztZQUMzQixJQUFJLENBQUMsWUFBWSxHQUFHLE9BQU8sQ0FBQztTQUM3QjthQUFNO1lBQ0wsSUFBSSxDQUFDLFlBQVksR0FBRyxNQUFNLENBQUM7WUFDM0IsSUFBSSxDQUFDLFlBQVksR0FBRyxPQUFPLENBQUM7U0FDN0I7SUFDSCxDQUFDOzs0RkE5Q1Usc0JBQXNCO3lFQUF0QixzQkFBc0I7dUZBQXRCLHNCQUFzQjtjQURsQyxTQUFTO2dCQU9VLEtBQUs7a0JBQXRCLEtBQUs7bUJBQUMsU0FBUztZQWdCYSxXQUFXO2tCQUF2QyxLQUFLO21CQUFDLGdCQUFnQiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IElucHV0LCBEaXJlY3RpdmUsIE9uSW5pdCB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgUG9EaXZpZGVyU2l6ZSB9IGZyb20gJy4vcG8tZGl2aWRlci1zaXplLmVudW0nO1xuXG4vKipcbiAqIEBkZXNjcmlwdGlvblxuICpcbiAqIEVzdGUgY29tcG9uZW50ZSBhcHJlc2VudGEgdW1hIGxpbmhhIGRlbWFyY2Fkb3JhIGRlIGJsb2NvcyBlIHBvZGUgY29udGVyIHVtICpsYWJlbCouIFNldSB1c28gw6kgaW5kaWNhZG8gcGFyYSBkZWZpbmnDp8Ojb1xuICogZSBvcmdhbml6YcOnw6NvIGRlIGluZm9ybWHDp8O1ZXMgZW0gdW1hIHRlbGEgZSBzdWEgY2FyYWN0ZXLDrXN0aWNhIMOpIHNlbWVsaGFudGUgw6AgdGFnIGA8aHI+YC5cbiAqL1xuQERpcmVjdGl2ZSgpXG5leHBvcnQgY2xhc3MgUG9EaXZpZGVyQmFzZUNvbXBvbmVudCBpbXBsZW1lbnRzIE9uSW5pdCB7XG4gIGNvb3JkaW5hdGVYMTogc3RyaW5nO1xuICBjb29yZGluYXRlWDI6IHN0cmluZztcbiAgcHJpdmF0ZSBfYm9yZGVyV2lkdGg6IHN0cmluZyA9IFBvRGl2aWRlclNpemUuc21hbGw7XG5cbiAgLyoqIFZhbG9yIGRvIHLDs3R1bG8gYSBzZXIgZXhpYmlkby4gKi9cbiAgQElucHV0KCdwLWxhYmVsJykgbGFiZWw/OiBzdHJpbmc7XG5cbiAgLyoqXG4gICAqIEBvcHRpb25hbFxuICAgKlxuICAgKiBAZGVzY3JpcHRpb25cbiAgICpcbiAgICogRGVmaW5lIGEgZXNwZXNzdXJhIGRhIGxpbmhhLlxuICAgKlxuICAgKiBWYWxvcmVzIHbDoWxpZG9zOlxuICAgKiAtIHNtYWxsXG4gICAqIC0gbWVkaXVtXG4gICAqIC0gbGFyZ2VcbiAgICpcbiAgICogQGRlZmF1bHQgYHNtYWxsYFxuICAgKi9cbiAgQElucHV0KCdwLWJvcmRlci13aWR0aCcpIHNldCBib3JkZXJXaWR0aCh2YWx1ZTogc3RyaW5nKSB7XG4gICAgdGhpcy5fYm9yZGVyV2lkdGggPSBQb0RpdmlkZXJTaXplW3ZhbHVlXSA/IFBvRGl2aWRlclNpemVbdmFsdWVdIDogUG9EaXZpZGVyU2l6ZS5zbWFsbDtcbiAgICB0aGlzLmdldENvb3JkaW5hdGVzKCk7XG4gIH1cblxuICBnZXQgYm9yZGVyV2lkdGgoKSB7XG4gICAgcmV0dXJuIHRoaXMuX2JvcmRlcldpZHRoO1xuICB9XG5cbiAgbmdPbkluaXQoKTogdm9pZCB7XG4gICAgdGhpcy5nZXRDb29yZGluYXRlcygpO1xuICB9XG5cbiAgZ2V0Q29vcmRpbmF0ZXMoKSB7XG4gICAgaWYgKHRoaXMuYm9yZGVyV2lkdGggPT09IFBvRGl2aWRlclNpemUuc21hbGwpIHtcbiAgICAgIHRoaXMuY29vcmRpbmF0ZVgxID0gJzAuMSUnO1xuICAgICAgdGhpcy5jb29yZGluYXRlWDIgPSAnOTkuOSUnO1xuICAgIH0gZWxzZSBpZiAodGhpcy5ib3JkZXJXaWR0aCA9PT0gUG9EaXZpZGVyU2l6ZS5tZWRpdW0pIHtcbiAgICAgIHRoaXMuY29vcmRpbmF0ZVgxID0gJzAuMiUnO1xuICAgICAgdGhpcy5jb29yZGluYXRlWDIgPSAnOTkuOCUnO1xuICAgIH0gZWxzZSB7XG4gICAgICB0aGlzLmNvb3JkaW5hdGVYMSA9ICcwLjMlJztcbiAgICAgIHRoaXMuY29vcmRpbmF0ZVgyID0gJzk5LjclJztcbiAgICB9XG4gIH1cbn1cbiJdfQ==