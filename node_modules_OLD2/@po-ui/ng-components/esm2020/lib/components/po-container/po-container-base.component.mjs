import { Input, Directive } from '@angular/core';
import { convertToBoolean, convertToInt } from '../../utils/util';
import * as i0 from "@angular/core";
/**
 * @description
 *
 * O `po-container` é um componente que visa facilitar o agrupamento de conteúdos.
 * Por padrão o mesmo exibe uma borda, um efeito de sombra ao seu redor e um espaçamento em sua parte interna, os quais
 * podem ser desabilitados. Ao remover sua borda a sombra também será removida. Além disso, sua altura acompanha a
 * quantidade do conteúdo, porém pode ser fixada. Para controlar sua largura, utilize o [Grid System](/guides/grid-system),
 * assim possibilitando o tratamento para diferentes resoluções.
 */
export class PoContainerBaseComponent {
    constructor() {
        this._noBorder = false;
        this._noPadding = false;
        /**
         * @deprecated 16.x.x
         *
         * @optional
         *
         * @description
         *
         * **Deprecated 16.x.x**.
         *
         * Desabilita o sombreamento em torno do `po-container`. Não é mais possível definir shadow para o `po-container` por questões de acessibilidade e usabilidade, por isso não indicamos mais o uso desta propriedade.
         *
         * @default `false`
         */
        this.noShadow = false;
    }
    /**
     * @optional
     *
     * @description
     *
     * Define a altura do `po-container`.
     *
     * > Caso não seja definido um valor, a altura se ajustará de acordo com o conteúdo.
     */
    set height(value) {
        this._height = convertToInt(value);
    }
    get height() {
        return this._height;
    }
    /**
     * @optional
     *
     * @description
     *
     * Desabilita a borda e a sombra em torno do `po-container`.
     *
     * @default `false`
     */
    set noBorder(value) {
        this._noBorder = convertToBoolean(value);
    }
    get noBorder() {
        return this._noBorder;
    }
    /**
     * @optional
     *
     * @description
     *
     * Desabilita o espaçamento interno do `po-container`.
     *
     * @default `false`
     */
    set noPadding(value) {
        this._noPadding = convertToBoolean(value);
    }
    get noPadding() {
        return this._noPadding;
    }
}
PoContainerBaseComponent.ɵfac = function PoContainerBaseComponent_Factory(t) { return new (t || PoContainerBaseComponent)(); };
PoContainerBaseComponent.ɵdir = /*@__PURE__*/ i0.ɵɵdefineDirective({ type: PoContainerBaseComponent, inputs: { height: ["p-height", "height"], noBorder: ["p-no-border", "noBorder"], noPadding: ["p-no-padding", "noPadding"], noShadow: ["p-no-shadow", "noShadow"] } });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && i0.ɵsetClassMetadata(PoContainerBaseComponent, [{
        type: Directive
    }], null, { height: [{
            type: Input,
            args: ['p-height']
        }], noBorder: [{
            type: Input,
            args: ['p-no-border']
        }], noPadding: [{
            type: Input,
            args: ['p-no-padding']
        }], noShadow: [{
            type: Input,
            args: ['p-no-shadow']
        }] }); })();
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicG8tY29udGFpbmVyLWJhc2UuY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vcHJvamVjdHMvdWkvc3JjL2xpYi9jb21wb25lbnRzL3BvLWNvbnRhaW5lci9wby1jb250YWluZXItYmFzZS5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLEtBQUssRUFBRSxTQUFTLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFFakQsT0FBTyxFQUFFLGdCQUFnQixFQUFFLFlBQVksRUFBRSxNQUFNLGtCQUFrQixDQUFDOztBQUVsRTs7Ozs7Ozs7R0FRRztBQUVILE1BQU0sT0FBTyx3QkFBd0I7SUFEckM7UUFHVSxjQUFTLEdBQWEsS0FBSyxDQUFDO1FBQzVCLGVBQVUsR0FBYSxLQUFLLENBQUM7UUFxRHJDOzs7Ozs7Ozs7Ozs7V0FZRztRQUNtQixhQUFRLEdBQVksS0FBSyxDQUFDO0tBQ2pEO0lBakVDOzs7Ozs7OztPQVFHO0lBQ0gsSUFBdUIsTUFBTSxDQUFDLEtBQWE7UUFDekMsSUFBSSxDQUFDLE9BQU8sR0FBRyxZQUFZLENBQUMsS0FBSyxDQUFDLENBQUM7SUFDckMsQ0FBQztJQUVELElBQUksTUFBTTtRQUNSLE9BQU8sSUFBSSxDQUFDLE9BQU8sQ0FBQztJQUN0QixDQUFDO0lBRUQ7Ozs7Ozs7O09BUUc7SUFDSCxJQUEwQixRQUFRLENBQUMsS0FBYztRQUMvQyxJQUFJLENBQUMsU0FBUyxHQUFHLGdCQUFnQixDQUFDLEtBQUssQ0FBQyxDQUFDO0lBQzNDLENBQUM7SUFFRCxJQUFJLFFBQVE7UUFDVixPQUFPLElBQUksQ0FBQyxTQUFTLENBQUM7SUFDeEIsQ0FBQztJQUVEOzs7Ozs7OztPQVFHO0lBQ0gsSUFBMkIsU0FBUyxDQUFDLEtBQWM7UUFDakQsSUFBSSxDQUFDLFVBQVUsR0FBRyxnQkFBZ0IsQ0FBQyxLQUFLLENBQUMsQ0FBQztJQUM1QyxDQUFDO0lBRUQsSUFBSSxTQUFTO1FBQ1gsT0FBTyxJQUFJLENBQUMsVUFBVSxDQUFDO0lBQ3pCLENBQUM7O2dHQXREVSx3QkFBd0I7MkVBQXhCLHdCQUF3Qjt1RkFBeEIsd0JBQXdCO2NBRHBDLFNBQVM7Z0JBZWUsTUFBTTtrQkFBNUIsS0FBSzttQkFBQyxVQUFVO1lBaUJTLFFBQVE7a0JBQWpDLEtBQUs7bUJBQUMsYUFBYTtZQWlCTyxTQUFTO2tCQUFuQyxLQUFLO21CQUFDLGNBQWM7WUFxQkMsUUFBUTtrQkFBN0IsS0FBSzttQkFBQyxhQUFhIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgSW5wdXQsIERpcmVjdGl2ZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuXG5pbXBvcnQgeyBjb252ZXJ0VG9Cb29sZWFuLCBjb252ZXJ0VG9JbnQgfSBmcm9tICcuLi8uLi91dGlscy91dGlsJztcblxuLyoqXG4gKiBAZGVzY3JpcHRpb25cbiAqXG4gKiBPIGBwby1jb250YWluZXJgIMOpIHVtIGNvbXBvbmVudGUgcXVlIHZpc2EgZmFjaWxpdGFyIG8gYWdydXBhbWVudG8gZGUgY29udGXDumRvcy5cbiAqIFBvciBwYWRyw6NvIG8gbWVzbW8gZXhpYmUgdW1hIGJvcmRhLCB1bSBlZmVpdG8gZGUgc29tYnJhIGFvIHNldSByZWRvciBlIHVtIGVzcGHDp2FtZW50byBlbSBzdWEgcGFydGUgaW50ZXJuYSwgb3MgcXVhaXNcbiAqIHBvZGVtIHNlciBkZXNhYmlsaXRhZG9zLiBBbyByZW1vdmVyIHN1YSBib3JkYSBhIHNvbWJyYSB0YW1iw6ltIHNlcsOhIHJlbW92aWRhLiBBbMOpbSBkaXNzbywgc3VhIGFsdHVyYSBhY29tcGFuaGEgYVxuICogcXVhbnRpZGFkZSBkbyBjb250ZcO6ZG8sIHBvcsOpbSBwb2RlIHNlciBmaXhhZGEuIFBhcmEgY29udHJvbGFyIHN1YSBsYXJndXJhLCB1dGlsaXplIG8gW0dyaWQgU3lzdGVtXSgvZ3VpZGVzL2dyaWQtc3lzdGVtKSxcbiAqIGFzc2ltIHBvc3NpYmlsaXRhbmRvIG8gdHJhdGFtZW50byBwYXJhIGRpZmVyZW50ZXMgcmVzb2x1w6fDtWVzLlxuICovXG5ARGlyZWN0aXZlKClcbmV4cG9ydCBjbGFzcyBQb0NvbnRhaW5lckJhc2VDb21wb25lbnQge1xuICBwcml2YXRlIF9oZWlnaHQ/OiBudW1iZXI7XG4gIHByaXZhdGUgX25vQm9yZGVyPzogYm9vbGVhbiA9IGZhbHNlO1xuICBwcml2YXRlIF9ub1BhZGRpbmc/OiBib29sZWFuID0gZmFsc2U7XG5cbiAgLyoqXG4gICAqIEBvcHRpb25hbFxuICAgKlxuICAgKiBAZGVzY3JpcHRpb25cbiAgICpcbiAgICogRGVmaW5lIGEgYWx0dXJhIGRvIGBwby1jb250YWluZXJgLlxuICAgKlxuICAgKiA+IENhc28gbsOjbyBzZWphIGRlZmluaWRvIHVtIHZhbG9yLCBhIGFsdHVyYSBzZSBhanVzdGFyw6EgZGUgYWNvcmRvIGNvbSBvIGNvbnRlw7pkby5cbiAgICovXG4gIEBJbnB1dCgncC1oZWlnaHQnKSBzZXQgaGVpZ2h0KHZhbHVlOiBudW1iZXIpIHtcbiAgICB0aGlzLl9oZWlnaHQgPSBjb252ZXJ0VG9JbnQodmFsdWUpO1xuICB9XG5cbiAgZ2V0IGhlaWdodCgpOiBudW1iZXIge1xuICAgIHJldHVybiB0aGlzLl9oZWlnaHQ7XG4gIH1cblxuICAvKipcbiAgICogQG9wdGlvbmFsXG4gICAqXG4gICAqIEBkZXNjcmlwdGlvblxuICAgKlxuICAgKiBEZXNhYmlsaXRhIGEgYm9yZGEgZSBhIHNvbWJyYSBlbSB0b3JubyBkbyBgcG8tY29udGFpbmVyYC5cbiAgICpcbiAgICogQGRlZmF1bHQgYGZhbHNlYFxuICAgKi9cbiAgQElucHV0KCdwLW5vLWJvcmRlcicpIHNldCBub0JvcmRlcih2YWx1ZTogYm9vbGVhbikge1xuICAgIHRoaXMuX25vQm9yZGVyID0gY29udmVydFRvQm9vbGVhbih2YWx1ZSk7XG4gIH1cblxuICBnZXQgbm9Cb3JkZXIoKTogYm9vbGVhbiB7XG4gICAgcmV0dXJuIHRoaXMuX25vQm9yZGVyO1xuICB9XG5cbiAgLyoqXG4gICAqIEBvcHRpb25hbFxuICAgKlxuICAgKiBAZGVzY3JpcHRpb25cbiAgICpcbiAgICogRGVzYWJpbGl0YSBvIGVzcGHDp2FtZW50byBpbnRlcm5vIGRvIGBwby1jb250YWluZXJgLlxuICAgKlxuICAgKiBAZGVmYXVsdCBgZmFsc2VgXG4gICAqL1xuICBASW5wdXQoJ3Atbm8tcGFkZGluZycpIHNldCBub1BhZGRpbmcodmFsdWU6IGJvb2xlYW4pIHtcbiAgICB0aGlzLl9ub1BhZGRpbmcgPSBjb252ZXJ0VG9Cb29sZWFuKHZhbHVlKTtcbiAgfVxuXG4gIGdldCBub1BhZGRpbmcoKTogYm9vbGVhbiB7XG4gICAgcmV0dXJuIHRoaXMuX25vUGFkZGluZztcbiAgfVxuXG4gIC8qKlxuICAgKiBAZGVwcmVjYXRlZCAxNi54LnhcbiAgICpcbiAgICogQG9wdGlvbmFsXG4gICAqXG4gICAqIEBkZXNjcmlwdGlvblxuICAgKlxuICAgKiAqKkRlcHJlY2F0ZWQgMTYueC54KiouXG4gICAqXG4gICAqIERlc2FiaWxpdGEgbyBzb21icmVhbWVudG8gZW0gdG9ybm8gZG8gYHBvLWNvbnRhaW5lcmAuIE7Do28gw6kgbWFpcyBwb3Nzw612ZWwgZGVmaW5pciBzaGFkb3cgcGFyYSBvIGBwby1jb250YWluZXJgIHBvciBxdWVzdMO1ZXMgZGUgYWNlc3NpYmlsaWRhZGUgZSB1c2FiaWxpZGFkZSwgcG9yIGlzc28gbsOjbyBpbmRpY2Ftb3MgbWFpcyBvIHVzbyBkZXN0YSBwcm9wcmllZGFkZS5cbiAgICpcbiAgICogQGRlZmF1bHQgYGZhbHNlYFxuICAgKi9cbiAgQElucHV0KCdwLW5vLXNoYWRvdycpIG5vU2hhZG93OiBib29sZWFuID0gZmFsc2U7XG59XG4iXX0=